#pragma once
#include <algorithm>
#include <iostream>
// Implementacja algorytmu sortowania bÄ…belkowego (bubble sort) dla szablonowej funkcji.
// Funkcja przyjmuje jako argumenty iteratory wskazujÄ…ce na pierwszy i ostatni element sortowanej kolekcji.

template <typename Iterator>
void bubbleSort(Iterator first, Iterator last)
{
    bool wasChanged = true; // Flaga s³u¿¹ca do wykrywania momentu, gdy nie ma ju¿ elementów do zamiany.
    auto lastToSort = last; // Przechowujemy d³ugoœæ kolekcji.

    // PÄ™tla iterujÄ…ca po wszystkich elementach kolekcji.
    for (auto i = first; i != last && wasChanged ; i++) {

        wasChanged = false;

        // PÄ™tla iterujÄ…ca po sÄ…siadujÄ…cych elementach.
        for (auto j = first; j != (lastToSort - 1); j++) {

            // JeÅ›li sÄ…siadujÄ…ce elementy sÄ… w zÅ‚ej kolejnoÅ›ci, to je zamieniamy.
            if (*j > *(j + 1)) {
                std::swap(*j, *(j + 1));
                wasChanged = true; // Ustawiamy flagÄ™, aby pokazaÄ‡, Å¼e wykonaliÅ›my zamianÄ™.
            }
        }

        lastToSort--; // Skracamy przedziaÅ‚ o ostatni element, ktÃ³ry zostaÅ‚ przesuniÄ™ty na wÅ‚aÅ›ciwe miejsce
    }
}